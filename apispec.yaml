openapi: 3.0.0
info:
  title: Token Balance API
  description: API for querying user's ERC20 token balances and information
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

paths:
  /api/user/{address}:
    get:
      tags:
        - User
      summary: Get user's token information
      description: |
        Retrieves all ERC20 tokens associated with a user's address, including 
        stablecoins like USDC and USDT. Returns token information without balances.
        Results are paginated with a default of 10 items per page.
        Use the GetBalance method from the token class to fetch actual balances.
        Note that balances are returned in the smallest unit (e.g., wei for ETH, 
        cents for USD-pegged tokens).
      parameters:
        - name: address
          in: path
          required: true
          description: Ethereum address of the user
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
          example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
        - name: include_zero_balance
          in: query
          required: false
          description: Include tokens with zero balance
          schema:
            type: boolean
            default: false
        - name: pageToken
          in: query
          description: Token for pagination, obtained from nextPageToken in previous response
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: User's ethereum address
                    example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
                  tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Token'
                    example:
                      [
                        {
                          "address": "0xCfbDAA56F1945e377fFdF38a5612c37f48819927",
                          "balance": "100000",
                          "balanceUsd": "21342.4255012640267614818",
                          "decimals": 18,
                          "name": "Crypto Emperor Trump",
                          "symbol": "TRUMP",
                          "tokenPrice": "0.21342425501264026762",
                          "type": "ERC20"
                        },
                        {
                          "address": "0xBe90D5238Ba6dcDC60fe8B845854128fd200f4A2",
                          "balance": "100000",
                          "balanceUsd": "7.147410934922441311141",
                          "decimals": 18,
                          "name": "Berachain",
                          "symbol": "BERA",
                          "tokenPrice": "0.000071474109349224413113",
                          "type": "ERC20"
                        },
                        {
                          "address": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                          "balance": "5.10942",
                          "balanceUsd": "5.1098800936437622513",
                          "decimals": 6,
                          "name": "USD Coin",
                          "symbol": "USDC",
                          "tokenPrice": "1.0000900481157865768",
                          "type": "ERC20"
                        }
                      ]
                  nextPageToken:
                    type: string
                    description: Token for fetching the next page of results
                    example: "eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19"
                  nextPageUrl:
                    type: string
                    description: Complete URL for fetching the next page of results
                    example: "http://localhost:8080/api/user/0x742d35Cc6634C0532925a3b844Bc454e4438f44e?pageToken=eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/user/{address}/balance:
    get:
      tags:
          - User
      summary: Get token balances
      description: |
        Retrieves balances for all ERC20 tokens associated with the address.
        Balances are returned in the smallest unit of the token.
        Results are paginated with a default of 10 items per page.
      parameters:
        - name: address
          in: path
          required: true
          description: Ethereum address of the user
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
          example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
        - name: include_zero_balance
          in: query
          required: false
          description: Include tokens with zero balance
          schema:
            type: boolean
            default: false
        - name: pageToken
          in: query
          description: Token for pagination, obtained from nextPageToken in previous response
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: User's ethereum address
                  tokens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Token'
                    example:
                      [
                        {
                          "address": "0xCfbDAA56F1945e377fFdF38a5612c37f48819927",
                          "balance": "100000",
                          "balanceUsd": "21342.4255012640267614818",
                          "decimals": 18,
                          "name": "Crypto Emperor Trump",
                          "symbol": "TRUMP",
                          "tokenPrice": "0.21342425501264026762",
                          "type": "ERC20"
                        },
                        {
                          "address": "0xBe90D5238Ba6dcDC60fe8B845854128fd200f4A2",
                          "balance": "100000",
                          "balanceUsd": "7.147410934922441311141",
                          "decimals": 18,
                          "name": "Berachain",
                          "symbol": "BERA",
                          "tokenPrice": "0.000071474109349224413113",
                          "type": "ERC20"
                        },
                        {
                          "address": "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
                          "balance": "5.10942",
                          "balanceUsd": "5.1098800936437622513",
                          "decimals": 6,
                          "name": "USD Coin",
                          "symbol": "USDC",
                          "tokenPrice": "1.0000900481157865768",
                          "type": "ERC20"
                        }
                      ]
                  nextPageToken:
                    type: string
                    description: Token for fetching the next page of results
                    example: "eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19"
                  nextPageUrl:
                    type: string
                    description: Complete URL for fetching the next page of results
                    example: "http://localhost:8080/api/user/0x742d35Cc6634C0532925a3b844Bc454e4438f44e/balance?pageToken=eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19&includeZeroBalance=true"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/user/{address}/nfts:
    get:
      tags:
        - User
      summary: Get user's NFT assets
      description: |
        Retrieves all NFT assets associated with a user's wallet address.
        Supports both ERC721 and ERC1155 tokens.
        Results are paginated and include a nextPageToken and nextPageUrl for fetching the next page.
      parameters:
        - name: address
          in: path
          required: true
          description: Ethereum address of the user
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
          example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
        - name: include_metadata
          in: query
          description: Whether to include metadata for NFTs
          schema:
            type: boolean
            default: true
        - name: pageToken
          in: query
          description: Token for pagination, obtained from nextPageToken in previous response
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: User's ethereum address
                    example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
                  nfts:
                    type: array
                    items:
                      $ref: '#/components/schemas/NFT'
                  nextPageToken:
                    type: string
                    description: Token for fetching the next page of results
                    example: "eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19"
                  nextPageUrl:
                    type: string
                    description: Complete URL for fetching the next page of results
                    example: "http://localhost:8080/api/user/0x742d35Cc6634C0532925a3b844Bc454e4438f44e/nfts?pageToken=eyJiYXNlIjp7InRva2VuIjoiOFY2RXlCdzNINXlOV0pyVTFpUnRVcWRQWjdDaXg1c3RoUVUyRndkVmE4dERHVlhMZGlaaTRiekxuczZuYnNIUlpvSHl3aUxhQUZSIiwib2Zmc2V0IjowLCJuZXh0VG9rZW4iOiIiLCJuZXh0VG9rZW5JbmRleCI6MH19&includeMetadata=true"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/search/did/{did}:
    get:
      tags:
        - User
      summary: Get wallet address by DID
      description: Retrieves the associated wallet address for a given DID
      parameters:
        - name: did
          in: path
          required: true
          description: Decentralized Identifier (DID) of the user
          schema:
            type: string
            pattern: '^did:[a-zA-Z0-9]+:[a-zA-Z0-9.]+$'
          example: "did:example:123456789abcdefghi"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  did:
                    type: string
                    description: The queried DID
                    example: "did:example:123456789abcdefghi"
                  address:
                    type: string
                    description: Associated Ethereum address
                    example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: DID not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/search/address/{address}:
    get:
      tags:
          - User
      summary: Get DID by wallet address
      description: Retrieves the associated DID for a given wallet address
      parameters:
        - name: address
          in: path
          required: true
          description: Ethereum address of the user
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
          example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: The queried Ethereum address
                    example: "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
                  did:
                    type: string
                    description: Associated DID
                    example: "did:example:123456789abcdefghi"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Address not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    TokenType:
      type: string
      enum: [ERC20, STABLE]
      description: Type of the token
      example: "ERC20"

    Token:
      type: object
      required:
        - address
        - symbol
        - name
      properties:
        address:
          type: string
          description: Token contract address
          example: "0xCfbDAA56F1945e377fFdF38a5612c37f48819927"
        name:
          type: string
          description: Token name
          example: "Crypto Emperor Trump"
        symbol:
          type: string
          description: Token symbol
          example: "TRUMP"
        type:
          $ref: '#/components/schemas/TokenType'
        decimals:
          type: integer
          description: Token decimals
          example: 18
        tokenPrice:
          type: string
          description: Token price
          example: "0.20591225800112319201"
        balance:
          type: string
          description: Token balance
          example: "100000"
        balanceUsd:
          type: string
          description: Token balance in USD
          example: "20591.2258001123192014516"

    TokenBalance:
      type: object
      required:
        - token
        - raw_balance
      properties:
        token:
          $ref: '#/components/schemas/Token'
        raw_balance:
          type: string
          description: Balance in smallest unit (as string to handle large numbers)
          example: "1000000"
        formatted_balance:
          type: string
          description: Human-readable balance
          example: "1.00"
        usd_value:
          type: string
          description: Current USD value
          example: "1.00"

    Pagination:
      type: object
      required:
        - current_page
        - total_pages
        - total_items
        - items_per_page
      properties:
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 5
        total_items:
          type: integer
          example: 100
        items_per_page:
          type: integer
          example: 20

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: "INVALID_ADDRESS"
        message:
          type: string
          example: "Invalid Ethereum address format"
        details:
          type: object
          additionalProperties: true

    NFTTrait:
      type: object
      properties:
        trait_type:
          type: string
          description: The type of the trait
          example: "Website"
        value:
          type: string
          description: The value of the trait
          example: "https://example.com"

    NFT:
      type: object
      properties:
        contractAddress:
          type: string
          description: The address of the NFT contract
          example: "0x2867a6dfb2c15f789c3bf0b5547ac4117850a060"
        tokenId:
          type: string
          description: The token ID of the NFT
          example: "1"
        type:
          type: string
          description: The type of the NFT contract (ERC721 or ERC1155)
          enum: [ERC721, ERC1155]
          example: "ERC1155"
        name:
          type: string
          description: The name of the NFT
          example: "Popo-frog"
        description:
          type: string
          description: The description of the NFT
          example: ""
        image:
          type: string
          description: The URL to the token's image
          example: "https://ipfs.io/ipfs/QmdpLjiLMy8Y7DHxDXDnEq7unwtS5GKk8ALvSR6DbvwBBj"
        attributes:
          type: array
          description: The traits/attributes of the NFT
          items:
            $ref: '#/components/schemas/NFTTrait'
        collection:
          type: string
          description: The name of the collection the NFT belongs to
          example: "Popo-frog"
        tokenUri:
          type: string
          description: The URL to the token's metadata
          example: "https://ipfs.io/ipfs/QmUCEt63cPP668TkPQZFCGpyx1oTJxfhjV4pZ54v6kVZNd"

    NFTAsset:
      type: object
      required:
        - name
        - description
        - dataLink
        - tokenId
        - contractAddress
        - metadata
      properties:
        name:
          type: string
          description: The name of the NFT asset
          example: "CryptoPunk #7804"
        description:
          type: string
          description: The description of the NFT asset
          example: "A rare CryptoPunk with unique attributes"
        dataLink:
          type: string
          description: The static resource link of the NFT asset
          example: "https://ipfs.io/ipfs/QmXYZ..."
        tokenId:
          type: string
          description: The token id of the NFT asset
          example: "7804"
        amount:
          type: integer
          description: The amount of the NFT asset (for ERC1155 tokens)
          nullable: true
          example: 1
        metadata:
          type: object
          description: The metadata of the NFT asset
          additionalProperties: true
          example: {
            "attributes": [
              {"trait_type": "Type", "value": "Alien"},
              {"trait_type": "Accessory", "value": "Cap"}
            ]
          }
        contractAddress:
          type: string
          description: The contract address of the NFT asset
          example: "0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"

    PaginatedNFTResult:
      type: object
      required:
        - data
        - page
        - pageSize
        - totalPages
        - total
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NFTAsset'
          description: Array of NFT assets for the current page
        page:
          type: integer
          description: Current page number
          example: 1
        pageSize:
          type: integer
          description: Number of items per page
          example: 10
        totalPages:
          type: integer
          description: Total number of pages
          example: 5
        total:
          type: integer
          description: Total number of items
          example: 42

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          schema:
            type: integer
          description: Number of seconds to wait before retrying
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []